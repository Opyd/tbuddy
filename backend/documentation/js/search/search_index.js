var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.746,1,1.83]],["body/injectables/AccessTokenGuard.html",[0,1.272,1,3.121,2,2.047,3,0.478,4,0.425,5,0.425,6,4.019,7,0.572,8,0.027,9,1.145,10,4.019,11,2.855,12,0.478,13,0.055,14,2.047,15,4.019,16,0.023,17,0.023]],["title/injectables/AccessTokenStrategy.html",[0,0.746,18,2.004]],["body/injectables/AccessTokenStrategy.html",[0,1.072,2,1.561,3,0.364,4,0.324,5,0.324,7,0.575,8,0.028,9,0.873,11,2.176,12,0.364,13,0.042,14,1.561,16,0.02,17,0.02,18,2.879,19,2.685,20,0.494,21,2.065,22,4.054,23,1.686,24,3.064,25,4.237,26,1.072,27,3.64,28,2.065,29,1.336,30,0.951,31,1.916,32,4.054,33,4.815,34,5.028,35,3.64,36,4.054,37,1.561,38,3.064,39,3.064,40,3.064,41,2.685,42,3.553,43,2.176,44,3.064,45,1.155,46,2.176,47,3.64,48,1.988,49,3.064,50,3.064,51,3.64,52,3.064,53,3.64,54,1.561]],["title/modules/AppModule.html",[55,1.552,56,2.212]],["body/modules/AppModule.html",[3,0.367,4,0.326,5,0.326,7,0.627,8,0.028,9,0.879,12,0.367,13,0.042,16,0.02,17,0.02,55,2.241,56,4.29,57,1.84,58,2.428,59,3.085,60,3.085,61,3.676,62,3.676,63,3.358,64,2.892,65,2.191,66,2.191,67,3.664,68,3.192,69,2.704,70,1.355,71,3.085,72,3.664,73,3.664,74,3.664,75,2.704,76,2.002,77,2.704,78,3.664,79,3.664,80,1.698,81,2.419]],["title/controllers/AuthController.html",[82,1.682,83,2.212]],["body/controllers/AuthController.html",[1,1.475,3,0.27,4,0.24,5,0.24,7,0.591,8,0.028,9,0.648,12,0.27,13,0.031,16,0.016,17,0.016,20,0.367,21,1.679,26,1.124,28,2.165,29,1.401,30,0.89,31,2.009,37,2.165,48,1.475,54,1.975,80,1.251,82,1.356,83,2.584,84,2.273,85,1.992,86,2.7,87,3.295,88,3.295,89,3.295,90,3.295,91,2.7,92,3.288,93,1.867,94,2.7,95,2.7,96,1.782,97,3.689,98,3.914,99,1.253,100,3.914,101,2.7,102,2.7,103,2.7,104,2.7,105,2.273,106,3.342,107,3.914,108,2.7,109,2.273,110,2.397,111,3.914,112,2.7,113,1.992,114,1.992,115,1.992,116,2.515,117,2.273,118,2.273,119,1.475,120,2.273,121,1.615,122,1.992,123,1.782,124,2.7,125,1.992,126,1.251,127,2.7,128,2.7,129,1.992,130,2.7,131,2.7,132,2.7,133,2.7,134,1.615,135,1.992,136,2.7,137,2.7,138,2.7,139,2.7,140,2.7,141,2.7,142,1.558,143,1.251,144,2.7,145,1.813,146,2.7,147,2.7]],["title/classes/AuthDto.html",[13,0.039,106,2.004]],["body/classes/AuthDto.html",[3,0.417,4,0.371,5,0.371,7,0.526,8,0.028,12,0.417,13,0.061,16,0.022,17,0.022,20,0.566,26,1.171,30,0.926,45,1.45,93,1.944,106,3.144,126,1.932,143,2.667,148,1.542,149,3.511,150,1.808,151,2.667,152,4.426,153,4.17,154,4.17,155,3.8,156,3.443,157,2.278,158,3.8]],["title/modules/AuthModule.html",[55,1.552,61,2.004]],["body/modules/AuthModule.html",[3,0.351,4,0.312,5,0.312,7,0.631,8,0.028,9,0.842,12,0.351,13,0.04,16,0.019,17,0.019,18,3.631,43,2.099,55,2.178,57,1.762,58,2.36,61,3.917,63,3.318,64,2.811,65,2.099,66,2.099,68,3.103,71,2.956,80,2.178,81,3.103,83,3.498,116,3.318,117,2.956,159,2.956,160,3.51,161,2.956,162,3.631,163,3.51,164,3.51,165,3.51,166,2.59,167,3.51,168,3.51,169,3.51,170,3.51,171,3.51]],["title/injectables/AuthService.html",[0,0.746,116,1.83]],["body/injectables/AuthService.html",[0,0.511,2,0.587,3,0.137,4,0.122,5,0.122,7,0.467,8,0.028,9,0.328,12,0.137,13,0.016,16,0.009,17,0.009,20,0.186,21,0.984,23,1.063,25,3.28,26,0.99,28,1.907,29,1.233,30,0.783,31,1.769,37,2.001,43,0.818,44,1.932,45,1.469,54,1.658,87,2.922,88,1.932,89,1.932,90,1.932,92,0.748,99,1.687,105,1.932,106,2.502,109,1.932,110,1.907,116,1.254,118,1.152,119,0.748,120,1.152,134,2.9,142,2.097,143,2.161,145,2.746,151,1.608,166,1.01,172,1.152,173,4.255,174,2.295,175,2.295,176,1.368,177,1.742,178,4.446,179,1.368,180,2.295,181,2.295,182,2.502,183,1.368,184,2.295,185,2.295,186,5.009,187,4.664,188,2.853,189,4.664,190,2.295,191,1.368,192,3.47,193,2.964,194,2.112,195,2.295,196,1.368,197,2.295,198,3.255,199,2.295,200,3.523,201,1.368,202,2.295,203,1.368,204,1.932,205,2.429,206,2.295,207,1.368,208,1.694,209,2.295,210,3.47,211,2.561,212,1.152,213,1.62,214,1.368,215,1.368,216,1.932,217,0.748,218,0.903,219,2.187,220,2.964,221,3.47,222,2.295,223,4.208,224,1.368,225,1.368,226,3.866,227,2.295,228,1.368,229,1.368,230,1.368,231,1.368,232,1.368,233,1.368,234,1.368,235,1.368,236,0.818,237,2.295,238,2.295,239,1.368,240,1.368,241,1.368,242,1.368,243,1.368,244,2.964,245,4.184,246,1.368,247,2.295,248,2.295,249,2.295,250,1.368,251,1.368,252,1.368,253,1.368,254,2.295,255,2.295,256,2.295,257,1.368,258,2.295,259,2.295,260,2.295,261,1.368,262,1.368,263,2.295,264,2.295,265,1.368,266,2.295,267,1.368,268,1.368,269,1.368,270,1.368,271,1.368,272,2.295,273,2.295,274,2.295,275,1.368,276,1.368,277,2.295]],["title/classes/CreateTeamDto.html",[13,0.039,278,1.83]],["body/classes/CreateTeamDto.html",[3,0.365,4,0.325,5,0.325,7,0.483,8,0.028,12,0.365,13,0.056,16,0.02,17,0.02,20,0.496,26,1.28,29,1.499,30,1.013,45,1.525,93,2.126,126,1.692,148,1.35,150,1.66,155,3.795,156,3.575,157,1.995,158,3.795,278,2.636,279,5.033,280,2.694,281,3.567,282,3.232,283,3.567,284,3.652,285,3.652,286,3.075,287,3.652,288,3.652,289,3.652,290,3.652,291,4.063,292,3.652,293,3.652,294,3.652]],["title/classes/CreateUserDto.html",[13,0.039,110,1.437]],["body/classes/CreateUserDto.html",[3,0.272,4,0.242,5,0.242,7,0.507,8,0.028,12,0.394,13,0.058,16,0.016,17,0.016,20,0.369,26,1.287,30,1.079,31,1.566,45,1.53,46,2.765,93,2.137,110,1.688,126,1.26,143,2.142,145,2.142,148,1.006,150,1.354,151,2.142,152,2.29,155,3.344,156,3.456,157,1.486,158,3.699,182,2.765,217,2.526,236,2.765,286,2.29,295,4.366,296,1.796,297,2.765,298,2.72,299,2.72,300,3.215,301,2.72,302,2.72,303,2.72,304,2.72,305,2.72,306,2.72,307,3.935,308,2.72,309,2.72,310,2.72,311,2.904,312,3.313,313,4.266,314,2.29,315,4.264,316,2.904,317,2.353,318,1.486,319,1.796,320,1.796,321,3.893,322,2.29,323,1.796,324,1.796,325,1.796,326,2.29,327,2.29,328,1.006,329,1.796]],["title/classes/DetailsDto.html",[13,0.039,300,2.004]],["body/classes/DetailsDto.html",[3,0.29,4,0.258,5,0.258,7,0.522,8,0.028,12,0.412,13,0.06,16,0.017,17,0.017,20,0.394,26,1.227,30,1.061,45,1.535,46,1.735,93,2.038,110,1.245,126,1.344,143,1.344,145,1.344,148,1.073,150,1.418,151,1.344,155,3.445,156,3.522,157,1.585,158,3.78,182,1.735,217,2.252,236,1.735,295,4.225,296,1.915,297,1.735,300,3.296,311,3.041,312,3.47,313,4.394,314,2.443,315,4.346,316,3.041,317,2.866,318,1.585,319,1.915,320,1.915,321,4.036,322,2.443,323,3.164,324,3.164,325,3.164,326,2.443,327,3.47,328,1.524,329,3.164,330,4.394,331,2.902,332,2.902,333,2.902,334,2.902,335,2.902,336,2.902]],["title/injectables/RefreshTokenGuard.html",[0,0.746,123,2.212]],["body/injectables/RefreshTokenGuard.html",[0,1.269,2,2.039,3,0.476,4,0.423,5,0.423,7,0.57,8,0.027,9,1.14,10,4.002,11,2.842,12,0.476,13,0.055,14,2.039,15,4.002,16,0.023,17,0.023,123,3.761,211,3.507,337,4.002]],["title/injectables/RefreshTokenStrategy.html",[0,0.746,162,2.004]],["body/injectables/RefreshTokenStrategy.html",[0,1.049,2,1.511,3,0.352,4,0.313,5,0.313,7,0.591,8,0.028,9,0.845,11,2.106,12,0.352,13,0.041,14,1.511,16,0.019,17,0.019,20,0.478,21,2.02,22,3.966,23,1.632,24,2.965,25,4.181,26,1.049,28,2.02,29,1.307,30,0.83,31,1.875,32,3.966,36,4.771,37,1.511,38,3.966,39,2.965,40,3.966,41,2.599,42,3.476,43,2.106,48,1.924,49,2.965,50,2.965,52,2.965,54,1.511,92,3.096,97,2.325,121,2.106,142,1.401,145,2.182,162,2.817,211,2.599,328,1.302,338,2.965,339,3.522,340,4.71,341,3.522,342,3.522,343,3.522,344,3.522,345,3.522]],["title/guards/RolesGuard.html",[76,1.83,346,2.472]],["body/guards/RolesGuard.html",[0,1.092,3,0.374,4,0.333,5,0.333,7,0.49,8,0.028,9,0.897,12,0.374,13,0.043,16,0.02,17,0.02,20,0.508,21,2.102,23,1.733,26,1.092,28,2.102,29,1.36,30,0.864,31,1.951,37,1.604,48,2.043,54,2.102,75,2.759,76,2.678,92,2.043,99,1.197,142,2.176,328,1.383,347,3.74,348,3.149,349,5.803,350,3.74,351,6.182,352,3.74,353,4.902,354,5.803,355,3.74,356,3.74,357,4.902,358,3.74,359,2.931,360,3.74,361,3.74,362,3.74,363,3.74,364,3.74]],["title/classes/Team.html",[13,0.039,365,1.437]],["body/classes/Team.html",[3,0.241,4,0.214,5,0.214,7,0.431,8,0.028,12,0.512,13,0.041,14,1.032,16,0.015,17,0.015,20,0.327,26,1.238,29,1.195,30,1.109,45,1.539,70,0.89,93,2.056,99,1.717,142,1.431,148,0.89,150,1.237,194,1.315,213,2.353,218,1.589,281,2.842,282,2.575,283,2.842,328,2.261,365,2.049,366,1.315,367,3.177,368,3.525,369,3.177,370,2.407,371,3.525,372,2.407,373,2.575,374,3.626,375,2.407,376,3.731,377,2.407,378,2.407,379,2.654,380,2.407,381,3.057,382,2.407,383,2.151,384,2.407,385,2.162,386,1.44,387,1.666,388,1.44,389,1.44,390,3.324,391,2.151,392,1.776,393,2.654,394,2.654,395,2.654,396,2.654,397,3.525,398,1.315,399,2.151,400,1.589,401,1.44,402,2.654,403,1.315,404,1.315,405,1.589]],["title/classes/TeamHistory.html",[13,0.039,389,2.004]],["body/classes/TeamHistory.html",[3,0.25,4,0.223,5,0.223,7,0.441,8,0.028,12,0.52,13,0.043,14,1.587,16,0.015,17,0.015,20,0.34,26,1.157,29,0.694,30,1.116,45,1.539,70,0.925,93,1.921,99,1.559,142,1.473,148,0.925,150,1.273,194,1.367,213,2.66,218,1.651,281,1.651,282,1.496,283,1.651,328,2.324,365,2.088,366,1.367,367,1.846,368,2.731,369,1.846,371,2.731,373,2.213,376,3.724,379,3.834,381,3.107,383,1.496,385,2.211,386,1.496,387,1.715,388,1.496,389,2.213,390,3.366,391,2.213,392,1.846,393,3.592,394,3.592,395,3.592,396,3.592,397,4.153,398,1.367,399,2.213,400,1.651,401,1.496,402,2.731,403,1.367,404,1.367,405,1.651,406,2.501,407,2.501,408,2.501,409,2.501,410,2.501]],["title/interfaces/TeamHistoryInterface.html",[373,2.004,398,1.83]],["body/interfaces/TeamHistoryInterface.html",[3,0.268,4,0.238,5,0.238,7,0.458,8,0.028,12,0.534,13,0.045,14,1.147,16,0.016,17,0.016,20,0.363,29,0.742,30,1.111,45,1.581,70,0.989,99,1.609,142,1.546,150,1.337,194,1.461,213,2.501,218,1.765,281,1.765,282,1.599,283,1.765,328,2.22,365,1.964,366,1.461,367,1.973,368,2.867,369,1.973,373,2.738,376,3.771,381,3.005,383,1.599,385,2.298,386,1.599,387,1.8,388,1.599,389,1.599,390,3.437,391,2.324,392,1.973,393,3.939,394,3.939,395,3.939,396,3.939,397,4.43,398,1.461,399,2.324,400,1.765,401,1.599,402,2.867,403,1.461,404,1.461,405,1.765,411,2.673]],["title/controllers/TeamsController.html",[82,1.682,412,2.212]],["body/controllers/TeamsController.html",[1,1.367,3,0.25,4,0.223,5,0.223,7,0.591,8,0.028,9,0.6,12,0.25,13,0.029,16,0.015,17,0.015,20,0.34,21,1.587,26,1.212,28,2.229,29,1.442,30,0.916,31,2.068,37,2.333,45,1.416,48,1.367,54,2.333,76,1.367,77,1.846,80,1.159,82,1.256,85,1.846,92,2.66,93,2.012,97,2.908,113,3.25,114,2.731,115,1.846,121,1.496,122,1.846,125,1.846,126,1.159,129,1.846,134,1.496,135,1.846,212,1.858,278,2.972,359,1.496,412,2.443,413,2.106,414,2.501,415,1.858,416,3.592,417,2.443,418,2.443,419,3.116,420,2.106,421,2.501,422,2.501,423,1.651,424,3.116,425,2.501,426,3.591,427,1.651,428,3.116,429,2.501,430,2.501,431,2.501,432,2.501,433,1.846,434,3.456,435,3.701,436,2.501,437,2.106,438,2.106,439,2.407,440,2.106,441,1.651,442,2.731,443,1.846,444,2.106,445,2.501,446,2.501,447,2.501,448,2.501,449,2.501,450,2.106,451,2.501,452,2.501,453,2.106,454,2.501,455,2.501,456,2.501,457,2.106,458,2.501]],["title/modules/TeamsModule.html",[55,1.552,62,2.004]],["body/modules/TeamsModule.html",[3,0.395,4,0.351,5,0.351,7,0.613,8,0.028,9,0.946,12,0.395,13,0.045,16,0.021,17,0.021,29,1.094,55,2.35,57,1.98,58,2.547,62,3.75,64,3.034,65,2.358,66,2.358,68,2.603,69,2.909,70,1.458,80,2.35,81,3.349,365,1.691,385,1.98,404,2.771,412,3.702,439,3.426,440,3.32,459,3.32,460,3.32,461,3.943,462,3.943,463,3.32,464,3.32,465,3.943]],["title/injectables/TeamsService.html",[0,0.746,439,1.83]],["body/injectables/TeamsService.html",[0,0.909,2,1.228,3,0.287,4,0.255,5,0.255,7,0.57,8,0.028,9,0.687,12,0.287,13,0.033,16,0.017,17,0.017,20,0.389,21,1.751,23,1.327,26,1.27,28,2.352,29,1.521,30,0.966,31,2.182,37,2.352,45,1.464,54,2.352,70,1.059,205,2.231,212,2.05,219,2.113,278,2.996,328,1.059,365,1.228,387,1.327,388,1.712,415,2.05,416,3.827,417,2.695,418,2.695,420,3.438,423,2.695,426,3.141,427,2.695,433,3.013,434,3.587,439,2.231,441,1.89,442,3.013,443,2.113,463,2.411,466,2.411,467,2.863,468,4.367,469,2.863,470,4.083,471,2.863,472,2.863,473,2.863,474,2.863,475,2.863,476,2.411,477,2.863,478,2.863,479,2.863,480,2.863,481,2.863,482,2.411,483,2.411,484,2.863]],["title/classes/UpdateTeamDto.html",[13,0.039,434,2.004]],["body/classes/UpdateTeamDto.html",[3,0.473,4,0.421,5,0.421,7,0.569,8,0.027,12,0.473,13,0.055,14,2.03,16,0.023,17,0.023,148,1.75,278,2.585,280,3.492,415,2.376,434,3.398,442,3.492,485,3.984,486,3.984,487,3.492,488,3.492,489,4.732]],["title/classes/UpdateUserDto.html",[13,0.039,490,2.212]],["body/classes/UpdateUserDto.html",[3,0.473,4,0.421,5,0.421,7,0.569,8,0.027,12,0.473,13,0.055,14,2.03,16,0.023,17,0.023,110,2.03,119,2.585,148,1.75,296,3.124,415,2.376,486,3.984,487,3.492,488,3.492,490,3.751,491,3.984,492,4.732]],["title/classes/User.html",[13,0.039,99,1.073]],["body/classes/User.html",[3,0.236,4,0.21,5,0.21,7,0.426,8,0.028,12,0.533,13,0.049,16,0.015,17,0.015,20,0.321,23,1.094,26,1.23,30,1.043,45,1.461,46,2.545,70,0.873,93,2.042,99,1.515,142,0.939,143,1.972,145,1.972,148,0.873,150,1.219,151,1.972,182,2.545,194,1.936,205,1.289,213,1.936,217,2.325,236,2.545,297,2.545,317,2.119,318,2.909,323,1.558,324,1.558,325,1.558,328,2.277,329,1.558,365,2.175,371,3.14,374,2.984,376,3.475,379,3.49,381,2.119,383,2.829,385,1.779,386,1.411,387,1.642,390,2.829,391,1.411,401,1.411,403,1.936,493,1.289,494,2.984,495,2.36,496,2.36,497,2.36,498,2.36,499,2.36,500,2.36,501,2.36,502,1.987,503,1.411,504,2.984,505,2.615,506,2.615,507,2.615,508,2.615,509,2.119,510,2.615,511,2.615,512,2.615,513,1.987,514,1.987,515,1.987,516,1.987,517,1.987,518,1.987,519,1.411,520,1.741]],["title/classes/UserDetails.html",[13,0.039,318,1.83]],["body/classes/UserDetails.html",[3,0.264,4,0.234,5,0.234,7,0.454,8,0.028,12,0.554,13,0.052,16,0.016,17,0.016,20,0.358,23,2.103,26,1.234,30,1.033,45,1.494,46,1.576,70,0.974,99,1.454,142,1.048,143,1.221,145,1.221,148,0.974,150,1.323,151,1.221,182,1.576,194,2.1,205,1.439,213,2.1,217,2.1,236,1.576,297,1.576,317,2.715,318,2.9,323,2.997,324,2.997,325,2.997,328,2.116,329,2.997,365,1.947,376,3.507,381,1.576,383,2.299,385,1.93,386,1.576,387,1.781,390,2.985,391,1.576,401,1.576,403,1.439,493,1.439,494,2.218,502,2.218,503,1.576,504,3.237,505,2.837,506,2.837,507,2.837,508,2.837,509,2.299,510,2.837,511,2.837,512,2.837,513,3.237,514,2.218,515,2.218,516,2.218,517,2.218,518,2.218,519,1.576,520,1.944,521,3.845,522,2.635,523,2.635,524,2.635,525,2.635]],["title/injectables/UserUpdateSelfDto.html",[0,0.746,526,2.004]],["body/injectables/UserUpdateSelfDto.html",[0,1.109,2,1.644,3,0.383,4,0.341,5,0.341,7,0.586,8,0.028,9,0.919,12,0.383,13,0.064,16,0.02,17,0.02,20,0.52,26,1.109,30,1.032,45,1.195,93,1.842,119,2.093,150,1.713,151,2.563,156,2.978,157,2.093,212,2.778,297,3.309,300,3.503,311,3.675,315,4.082,316,3.675,320,2.529,330,3.226,415,1.924,526,2.978,527,4.658,528,3.226,529,3.832,530,3.832,531,3.832]],["title/controllers/UsersController.html",[82,1.682,532,2.212]],["body/controllers/UsersController.html",[1,2.201,3,0.216,4,0.192,5,0.192,7,0.567,8,0.028,9,0.518,12,0.216,13,0.025,16,0.014,17,0.014,20,0.293,21,1.421,26,1.086,28,2.091,29,1.352,30,0.859,31,1.94,37,2.56,45,1.285,48,1.179,54,2.091,76,1.809,77,1.593,80,1,82,1.084,85,1.593,92,2.926,93,1.803,96,2.186,97,3.396,99,1.852,110,2.37,113,2.973,114,2.444,115,1.593,119,1.179,121,1.291,122,1.593,125,1.593,126,1,129,1.593,134,2.702,135,2.973,173,2.973,177,2.023,188,1.593,198,3.805,200,2.789,204,2.789,212,2.023,223,1.593,282,1.981,359,1.291,415,1.663,417,2.186,418,2.186,423,1.425,424,2.789,426,3.535,427,1.425,428,1.818,437,1.818,438,1.818,441,1.425,444,1.818,450,1.818,453,1.818,457,1.818,503,1.981,526,2.702,532,2.186,533,1.818,534,2.159,535,3.312,536,1.818,537,2.159,538,2.159,539,2.159,540,2.159,541,3.312,542,5.526,543,2.159,544,3.312,545,2.159,546,2.159,547,2.159,548,2.159,549,4.519,550,2.159,551,2.159,552,1.818,553,1.818,554,1.818,555,2.159,556,2.159,557,2.159,558,2.159,559,2.159,560,2.159,561,2.159,562,2.159,563,2.159,564,2.159,565,2.159,566,2.159,567,2.159]],["title/modules/UsersModule.html",[55,1.552,63,1.83]],["body/modules/UsersModule.html",[3,0.379,4,0.337,5,0.337,7,0.605,8,0.028,9,0.91,12,0.379,13,0.044,16,0.02,17,0.02,29,1.052,55,2.292,57,1.904,58,2.483,63,3.453,64,2.958,65,2.268,66,2.268,68,2.503,69,2.798,70,1.402,80,2.292,81,3.265,99,1.214,177,3.327,319,2.503,385,1.904,464,3.193,519,2.958,532,3.634,552,3.193,568,3.193,569,3.193,570,3.193,571,3.792,572,4.946,573,3.792,574,3.792]],["title/injectables/UsersService.html",[0,0.746,177,1.682]],["body/injectables/UsersService.html",[0,0.684,2,0.841,3,0.196,4,0.174,5,0.174,7,0.517,8,0.028,9,0.47,12,0.196,13,0.023,16,0.013,17,0.013,20,0.266,21,1.318,23,0.908,26,1.226,28,2.296,29,1.485,30,0.943,31,2.13,37,2.296,45,1.489,54,2.296,70,0.725,99,1.214,110,1.999,119,1.679,134,1.838,142,0.78,143,2.48,145,1.424,151,1.424,173,4.729,177,1.543,188,2.268,205,2.071,208,2.268,212,2.483,219,1.446,223,1.446,319,1.294,328,1.137,387,0.908,415,1.543,416,3.167,417,2.502,418,2.029,423,2.029,426,2.833,427,2.029,433,1.446,441,1.294,443,1.446,468,3.613,476,1.651,482,1.651,483,3.613,490,3.533,503,1.172,526,3.291,536,2.588,553,1.651,554,1.651,575,1.651,576,3.073,577,3.073,578,3.791,579,1.96,580,1.96,581,3.073,582,1.96,583,1.96,584,5.834,585,3.073,586,1.96,587,3.073,588,1.96,589,1.96,590,1.96,591,1.96,592,1.96,593,1.96,594,3.073,595,3.073,596,3.073,597,1.96,598,1.96,599,1.96,600,1.96,601,1.96,602,3.791,603,3.073,604,4.164,605,3.073,606,1.96,607,1.96,608,1.96,609,1.96]],["title/coverage.html",[610,3.361]],["body/coverage.html",[0,1.328,1,1.528,5,0.249,6,2.355,8,0.028,13,0.071,16,0.016,17,0.016,18,1.673,19,2.064,30,0.493,76,1.528,82,2.358,83,1.846,84,2.355,99,0.896,106,1.673,110,1.2,116,1.528,123,1.846,149,2.355,162,1.673,172,2.355,177,1.404,205,1.528,208,2.064,212,1.404,278,1.528,279,2.355,280,2.962,295,2.962,296,3.1,300,1.673,318,1.528,337,2.355,338,2.355,346,2.064,348,2.355,359,1.673,365,1.2,366,2.969,373,1.673,389,1.673,398,1.528,399,1.673,404,1.528,412,1.846,413,2.355,434,1.673,439,1.528,466,2.355,485,2.355,490,1.846,491,2.355,493,2.566,519,1.673,526,1.673,527,2.355,528,2.355,532,1.846,533,2.355,575,2.355,604,5.639,610,2.064,611,2.797,612,2.797,613,2.797,614,4.015,615,2.797,616,2.797,617,5.435,618,2.355,619,5.132,620,6.071,621,2.355,622,2.355,623,4.697,624,4.697,625,4.697,626,2.797,627,2.797,628,2.355,629,2.797,630,2.797,631,2.797]],["title/dependencies.html",[58,2.021,632,2.363]],["body/dependencies.html",[8,0.028,9,0.982,11,2.447,13,0.06,16,0.021,17,0.021,41,3.832,42,3.019,43,2.447,58,2.054,70,1.513,75,3.019,121,2.447,126,1.896,157,2.235,166,3.019,216,3.445,320,2.701,387,1.896,487,3.019,488,3.019,633,6.196,634,4.091,635,4.091,636,4.091,637,4.091,638,4.091,639,4.091,640,4.091,641,4.091,642,4.091,643,4.091,644,4.091,645,4.091,646,4.091,647,4.091,648,4.091,649,4.091,650,4.091]],["title/miscellaneous/enumerations.html",[651,1.3,652,3.389]],["body/miscellaneous/enumerations.html",[8,0.027,16,0.022,17,0.022,20,0.598,217,2.972,317,3.254,493,2.407,505,4.015,506,4.015,507,4.015,508,4.015,509,3.254,510,4.015,511,4.015,512,4.015,651,2.042,652,3.71,653,4.015,654,5.56]],["title/miscellaneous/functions.html",[651,1.3,655,3.389]],["body/miscellaneous/functions.html",[8,0.024,16,0.024,17,0.024,20,0.694,621,4.302,622,5.296,651,2.368,655,4.302,656,5.11]],["title/index.html",[20,0.381,657,2.807,658,2.807]],["body/index.html",[4,0.326,8,0.027,16,0.02,17,0.02,96,2.419,419,4.072,509,2.191,610,2.704,659,3.664,660,3.664,661,4.836,662,3.664,663,3.664,664,3.664,665,3.664,666,3.664,667,3.664,668,5.413,669,3.664,670,3.664,671,3.664,672,3.664,673,6.268,674,3.664,675,3.664,676,3.664,677,6.147,678,3.664,679,3.664,680,4.836,681,3.664,682,3.664,683,3.664,684,3.664,685,4.836,686,3.664,687,3.664,688,3.664,689,4.836,690,4.836,691,3.664,692,3.664,693,3.664,694,3.664,695,3.664,696,3.664,697,3.664,698,3.664,699,3.664,700,3.664,701,3.664,702,3.664,703,3.664,704,3.664,705,3.664,706,3.085,707,3.664,708,3.664,709,3.664,710,3.664,711,3.664,712,3.664,713,3.085]],["title/modules.html",[57,2.287]],["body/modules.html",[8,0.024,16,0.024,17,0.024,56,3.179,57,2.418,61,2.88,62,2.88,63,2.631,509,3.8,714,6.354,715,6.354,716,6.354]],["title/overview.html",[717,3.835]],["body/overview.html",[2,1.593,8,0.027,16,0.02,17,0.02,18,3.259,56,4.212,57,1.865,58,2.45,59,3.127,60,3.127,61,3.926,62,3.595,63,3.436,64,2.918,65,2.221,66,2.221,80,1.721,116,2.977,148,1.373,159,3.127,161,3.127,162,3.259,177,3.157,291,3.127,346,2.74,398,2.029,439,2.977,459,3.127,460,3.127,568,3.127,569,3.127,570,3.127,628,3.127,717,3.127,718,3.714,719,3.714,720,4.88]],["title/properties.html",[150,1.385,632,2.363]],["body/properties.html",[8,0.027,16,0.024,17,0.024,96,3.326,150,1.733,706,4.243,713,4.243,721,5.039,722,5.039,723,5.039]],["title/miscellaneous/typealiases.html",[651,1.3,724,4.025]],["body/miscellaneous/typealiases.html",[8,0.024,16,0.024,17,0.024,19,3.601,20,0.663,30,1.02,34,4.874,366,2.666,388,3.461,493,2.666,503,3.461,651,2.261,653,3.601,725,4.881,726,4.881,727,4.109,728,4.881]],["title/miscellaneous/variables.html",[651,1.3,729,3.389]],["body/miscellaneous/variables.html",[8,0.027,16,0.023,17,0.023,20,0.608,45,1.074,359,3.708,366,2.447,399,3.287,400,2.956,403,3.387,404,3.003,405,2.956,493,2.447,519,3.287,520,3.305,618,3.771,651,2.075,653,3.305,654,5.22,727,4.627,729,3.771,730,4.479,731,4.479]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":604,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":722,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["0.30.1",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":720,"title":{},"body":{"overview.html":{}}}],["1/10",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":628,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2.2.0",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":718,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["30d",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["30min",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":291,"title":{},"body":{"classes/CreateTeamDto.html":{},"overview.html":{}}}],["4.0.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["6.1.3",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["6.6.5",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":719,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["_v",{"_index":605,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":18,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["account",{"_index":595,"title":{},"body":{"injectables/UsersService.html":{}}}],["activetournament",{"_index":367,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["admin",{"_index":512,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":725,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":696,"title":{},"body":{"index.html":{}}}],["apihideproperty",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["apihideproperty()@isempty",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproduces",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["apiproperty",{"_index":158,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isempty",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":286,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@length(4",{"_index":290,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["apiproperty()@isstring",{"_index":284,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":152,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty({type",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('teams",{"_index":445,"title":{},"body":{"controllers/TeamsController.html":{}}}],["apitags('users",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":675,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":667,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2.hash(createuserdto.password",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.hash(refreshtoken",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.verify",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":83,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":106,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdto.password",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":15,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":706,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":116,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["await",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":697,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('access",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('username",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":508,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["both",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":716,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":714,"title":{},"body":{"modules.html":{}}}],["building",{"_index":662,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":349,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":353,"title":{},"body":{"guards/RolesGuard.html":{}}}],["changes",{"_index":594,"title":{},"body":{"injectables/UsersService.html":{}}}],["checking",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":13,"title":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":148,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"overview.html":{}}}],["client",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_teamsmodule",{"_index":459,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["cluster_teamsmodule_providers",{"_index":460,"title":{},"body":{"modules/TeamsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":568,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":569,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":570,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["common/decorators/roles.decorator",{"_index":444,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["common/guards/accesstoken.guard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["common/guards/refreshtoken.guard",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["common/guards/roles.guard",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["config",{"_index":32,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["config.get('jwt_access_secret",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["config.get('jwt_refresh_secret",{"_index":343,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["configmodule",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice",{"_index":25,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["console.log(createuserdto",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(team.name",{"_index":477,"title":{},"body":{"injectables/TeamsService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":597,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(config",{"_index":24,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(private",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":350,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(teammodel",{"_index":467,"title":{},"body":{"injectables/TeamsService.html":{}}}],["constructor(usermodel",{"_index":579,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":356,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":361,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":362,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":82,"title":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('teams",{"_index":446,"title":{},"body":{"controllers/TeamsController.html":{}}}],["controller('users",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["country",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["coverage",{"_index":610,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":415,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":450,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["create(createteamdto",{"_index":420,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{}}}],["create(createuserdto",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":598,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":600,"title":{},"body":{"injectables/UsersService.html":{}}}],["creates",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["createteamdto",{"_index":278,"title":{"classes/CreateTeamDto.html":{}},"body":{"classes/CreateTeamDto.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":110,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.username",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentteam",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["data",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{}}}],["date",{"_index":397,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["decorators",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"controllers/TeamsController.html":{},"classes/User.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":403,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["defualt",{"_index":494,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["delete",{"_index":438,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":428,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["denied",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["detailsdto",{"_index":300,"title":{"classes/DetailsDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{},"coverage.html":{}}}],["detailsdto})@isoptional()@isdefined()@type(undefined)@validatenested",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":676,"title":{},"body":{"index.html":{}}}],["document",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["documentation",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["dto/auth.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":441,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":443,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["dto/user",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":686,"title":{},"body":{"index.html":{}}}],["each",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["efficient",{"_index":663,"title":{},"body":{"index.html":{}}}],["email",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["enum",{"_index":504,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["enumerations",{"_index":652,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exec",{"_index":483,"title":{},"body":{"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":354,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exists",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":572,"title":{},"body":{"modules/UsersModule.html":{}}}],["express",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{}}}],["extracting",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["extractjwt",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["extractjwt.frombodyfield('refreshtoken",{"_index":342,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":416,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["findbyidandupdate(id",{"_index":482,"title":{},"body":{"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["findbyusername",{"_index":576,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyusername(username",{"_index":585,"title":{},"body":{"injectables/UsersService.html":{}}}],["findlogged",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{}}}],["findlogged(@req",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["findlogged(req",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{}}}],["findloggeduser",{"_index":577,"title":{},"body":{"injectables/UsersService.html":{}}}],["findloggeduser(username",{"_index":587,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":417,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":453,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":423,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["framework",{"_index":661,"title":{},"body":{"index.html":{}}}],["function",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["functions",{"_index":655,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["generating",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":424,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["get('logout",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('test",{"_index":447,"title":{},"body":{"controllers/TeamsController.html":{}}}],["getting",{"_index":657,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokens(userid",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["grow",{"_index":693,"title":{},"body":{"index.html":{}}}],["guard",{"_index":346,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":347,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hash",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedrefreshedtoken",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":703,"title":{},"body":{"index.html":{}}}],["history",{"_index":368,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["https://nestjs.com",{"_index":710,"title":{},"body":{"index.html":{}}}],["icon",{"_index":281,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["id",{"_index":426,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":358,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}}}],["incorrect",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TeamsService.html":{},"injectables/UserUpdateSelfDto.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"injectables/TeamsService.html":{},"injectables/UserUpdateSelfDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TeamsService.html":{},"injectables/UserUpdateSelfDto.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":476,"title":{},"body":{"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":672,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":674,"title":{},"body":{"index.html":{}}}],["interface",{"_index":398,"title":{"interfaces/TeamHistoryInterface.html":{}},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":411,"title":{},"body":{"interfaces/TeamHistoryInterface.html":{}}}],["isdefined",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["isemail",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["isempty",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["isenum",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["isenum(playerroles",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["isnotempty",{"_index":155,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{}}}],["isoptional",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["isoptional()@isdefined()@type(undefined)@validatenested",{"_index":529,"title":{},"body":{"injectables/UserUpdateSelfDto.html":{}}}],["isoptional()@isenum(playerroles",{"_index":335,"title":{},"body":{"classes/DetailsDto.html":{}}}],["isoptional()@isstring",{"_index":330,"title":{},"body":{"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["isstring",{"_index":156,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["isstring()@isnotempty",{"_index":288,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["join",{"_index":699,"title":{},"body":{"index.html":{}}}],["jungle",{"_index":507,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["jwt",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":50,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":707,"title":{},"body":{"index.html":{}}}],["length",{"_index":293,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["length(4",{"_index":294,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["license",{"_index":713,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":690,"title":{},"body":{"index.html":{}}}],["literal",{"_index":728,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logged",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{}}}],["logout",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["made",{"_index":596,"title":{},"body":{"injectables/UsersService.html":{}}}],["matches",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["matchid",{"_index":393,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["matching",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["members",{"_index":369,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["metadata",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["methods",{"_index":21,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mid",{"_index":505,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":651,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":689,"title":{},"body":{"index.html":{}}}],["mode",{"_index":680,"title":{},"body":{"index.html":{}}}],["model",{"_index":468,"title":{},"body":{"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb://mongoadmin:mongoadmin@localhost:27017/praca",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":387,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["mongoose.schema.types.objectid",{"_index":391,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["mongoose.schema.types.string",{"_index":402,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["mongoosemodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":464,"title":{},"body":{"modules/TeamsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":702,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":708,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":668,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":712,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":487,"title":{},"body":{"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newuser",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser._id",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.role",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.username",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":660,"title":{},"body":{"index.html":{}}}],["npm",{"_index":673,"title":{},"body":{"index.html":{}}}],["null",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["object",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["one",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":691,"title":{},"body":{"index.html":{}}}],["oponnent",{"_index":394,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["oponnentid",{"_index":395,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["optional",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["organizer",{"_index":511,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":717,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":282,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/UsersController.html":{}}}],["package",{"_index":632,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":486,"title":{},"body":{"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createteamdto",{"_index":489,"title":{},"body":{"classes/UpdateTeamDto.html":{}}}],["partialtype(createuserdto",{"_index":492,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["passreqtocallback",{"_index":344,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["password",{"_index":151,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"injectables/UsersService.html":{}}}],["passwordmatches",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":437,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":435,"title":{},"body":{"controllers/TeamsController.html":{}}}],["patch('me",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["player",{"_index":510,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["playerroles",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["please",{"_index":700,"title":{},"body":{"index.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["post('refresh",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signin",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefferedroles",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["prefix",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":682,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":659,"title":{},"body":{"index.html":{}}}],["project",{"_index":692,"title":{},"body":{"index.html":{}}}],["promise",{"_index":584,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.all",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["prop",{"_index":376,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["prop({default",{"_index":370,"title":{},"body":{"classes/Team.html":{}}}],["prop({required",{"_index":379,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"classes/User.html":{}}}],["prop({type",{"_index":374,"title":{},"body":{"classes/Team.html":{},"classes/User.html":{}}}],["properties",{"_index":150,"title":{"properties.html":{}},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"properties.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":513,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["read",{"_index":701,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["ref",{"_index":381,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["reflect",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":351,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refreshtoken",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{}}}],["refreshtokenguard",{"_index":123,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokenmatches",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokens(@req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(req",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(username",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokenstrategy",{"_index":162,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["refrestoken",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":418,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":457,"title":{},"body":{"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":427,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":671,"title":{},"body":{"index.html":{}}}],["req",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["req.body.refreshtoken",{"_index":345,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["req.user",{"_index":449,"title":{},"body":{"controllers/TeamsController.html":{}}}],["req.user['refreshtoken",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user['username",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":363,"title":{},"body":{"guards/RolesGuard.html":{}}}],["required",{"_index":390,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":396,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["results",{"_index":16,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["return{string",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["rimraf",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["roles",{"_index":359,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles('admin')@useguards(accesstokenguard",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles.includes(user.role",{"_index":364,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":76,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@delete(':id",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{}}}],["run",{"_index":677,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":664,"title":{},"body":{"index.html":{}}}],["schema",{"_index":385,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"modules/UsersModule.html":{}}}],["schema/team.schema",{"_index":463,"title":{},"body":{"modules/TeamsModule.html":{},"injectables/TeamsService.html":{}}}],["schemafactory",{"_index":386,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["schemafactory.createforclass(team",{"_index":405,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(teamhistory",{"_index":400,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":520,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["select",{"_index":603,"title":{},"body":{"injectables/UsersService.html":{}}}],["self.dto",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["self.dto.ts",{"_index":528,"title":{},"body":{"injectables/UserUpdateSelfDto.html":{},"coverage.html":{}}}],["self.dto.ts:15",{"_index":531,"title":{},"body":{"injectables/UserUpdateSelfDto.html":{}}}],["self.dto.ts:21",{"_index":530,"title":{},"body":{"injectables/UserUpdateSelfDto.html":{}}}],["server",{"_index":665,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["side",{"_index":666,"title":{},"body":{"index.html":{}}}],["sign",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(authdto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specified",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{}}}],["sponsors",{"_index":695,"title":{},"body":{"index.html":{}}}],["src/.../accesstoken.strategy.ts",{"_index":726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../team.schema.ts",{"_index":727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":653,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:109",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:11",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:147",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:59",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":149,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:13",{"_index":153,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:8",{"_index":154,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts",{"_index":19,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:12",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:20",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts",{"_index":338,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:11",{"_index":339,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:20",{"_index":341,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/guards/accesstoken.guard.ts",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/common/guards/refreshtoken.guard.ts",{"_index":337,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":348,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:5",{"_index":352,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:8",{"_index":355,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/main.ts",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/teams/dto/create",{"_index":279,"title":{},"body":{"classes/CreateTeamDto.html":{},"coverage.html":{}}}],["src/teams/dto/update",{"_index":485,"title":{},"body":{"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["src/teams/schema/team.schema.ts",{"_index":366,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/teams/schema/team.schema.ts:13",{"_index":407,"title":{},"body":{"classes/TeamHistory.html":{}}}],["src/teams/schema/team.schema.ts:15",{"_index":408,"title":{},"body":{"classes/TeamHistory.html":{}}}],["src/teams/schema/team.schema.ts:18",{"_index":409,"title":{},"body":{"classes/TeamHistory.html":{}}}],["src/teams/schema/team.schema.ts:21",{"_index":410,"title":{},"body":{"classes/TeamHistory.html":{}}}],["src/teams/schema/team.schema.ts:24",{"_index":406,"title":{},"body":{"classes/TeamHistory.html":{}}}],["src/teams/schema/team.schema.ts:40",{"_index":380,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:43",{"_index":377,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:46",{"_index":384,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:49",{"_index":382,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:52",{"_index":378,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:55",{"_index":372,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/schema/team.schema.ts:58",{"_index":375,"title":{},"body":{"classes/Team.html":{}}}],["src/teams/teams.controller.ts",{"_index":413,"title":{},"body":{"controllers/TeamsController.html":{},"coverage.html":{}}}],["src/teams/teams.controller.ts:28",{"_index":432,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:33",{"_index":421,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:38",{"_index":422,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:43",{"_index":425,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:48",{"_index":436,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.controller.ts:53",{"_index":429,"title":{},"body":{"controllers/TeamsController.html":{}}}],["src/teams/teams.module.ts",{"_index":461,"title":{},"body":{"modules/TeamsModule.html":{}}}],["src/teams/teams.service.ts",{"_index":466,"title":{},"body":{"injectables/TeamsService.html":{},"coverage.html":{}}}],["src/teams/teams.service.ts:11",{"_index":471,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/teams/teams.service.ts:15",{"_index":472,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/teams/teams.service.ts:19",{"_index":473,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/teams/teams.service.ts:23",{"_index":475,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/teams/teams.service.ts:29",{"_index":474,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/teams/teams.service.ts:9",{"_index":469,"title":{},"body":{"injectables/TeamsService.html":{}}}],["src/users/dto/create",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":491,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":527,"title":{},"body":{"injectables/UserUpdateSelfDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":493,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":525,"title":{},"body":{"classes/UserDetails.html":{}}}],["src/users/schemas/user.schema.ts:23",{"_index":524,"title":{},"body":{"classes/UserDetails.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":523,"title":{},"body":{"classes/UserDetails.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":522,"title":{},"body":{"classes/UserDetails.html":{}}}],["src/users/schemas/user.schema.ts:26",{"_index":521,"title":{},"body":{"classes/UserDetails.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":501,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":497,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":498,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":500,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:55",{"_index":499,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":495,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":496,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:33",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:54",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:60",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":571,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":575,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":580,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:12",{"_index":582,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":583,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":588,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":589,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":586,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":591,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":593,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":590,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":678,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":681,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":683,"title":{},"body":{"index.html":{}}}],["started",{"_index":658,"title":{"index.html":{}},"body":{}}],["starter",{"_index":670,"title":{},"body":{"index.html":{}}}],["statements",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":704,"title":{},"body":{"index.html":{}}}],["strategies/accesstoken.strategy",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/refreshtoken.strategy",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{}}}],["super",{"_index":49,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["support",{"_index":509,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":715,"title":{},"body":{"modules.html":{}}}],["table",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":283,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["team",{"_index":365,"title":{"classes/Team.html":{}},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"coverage.html":{}}}],["team.dto",{"_index":442,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{}}}],["team.dto.ts",{"_index":280,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["team.dto.ts:12",{"_index":285,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.dto.ts:18",{"_index":292,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.dto.ts:22",{"_index":289,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.dto.ts:8",{"_index":287,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.name",{"_index":465,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teamdocument",{"_index":388,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"injectables/TeamsService.html":{},"miscellaneous/typealiases.html":{}}}],["teamhistory",{"_index":389,"title":{"classes/TeamHistory.html":{}},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"coverage.html":{}}}],["teamhistoryinterface",{"_index":373,"title":{"interfaces/TeamHistoryInterface.html":{}},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"coverage.html":{}}}],["teamhistoryschema",{"_index":399,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teammodel",{"_index":470,"title":{},"body":{"injectables/TeamsService.html":{}}}],["teams",{"_index":414,"title":{},"body":{"controllers/TeamsController.html":{}}}],["teams.controller",{"_index":462,"title":{},"body":{"modules/TeamsModule.html":{}}}],["teams.service",{"_index":440,"title":{},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{}}}],["teams/schema/team.schema",{"_index":502,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["teams/teams.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["teamschema",{"_index":404,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"modules/TeamsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamscontroller",{"_index":412,"title":{"controllers/TeamsController.html":{}},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"coverage.html":{}}}],["teamsmodule",{"_index":62,"title":{"modules/TeamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"modules.html":{},"overview.html":{}}}],["teamsservice",{"_index":439,"title":{"injectables/TeamsService.html":{}},"body":{"controllers/TeamsController.html":{},"modules/TeamsModule.html":{},"injectables/TeamsService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":419,"title":{},"body":{"controllers/TeamsController.html":{},"index.html":{}}}],["test(@req",{"_index":448,"title":{},"body":{"controllers/TeamsController.html":{}}}],["test(req",{"_index":430,"title":{},"body":{"controllers/TeamsController.html":{}}}],["test:covsupport",{"_index":688,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":687,"title":{},"body":{"index.html":{}}}],["tests",{"_index":685,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":694,"title":{},"body":{"index.html":{}}}],["this.about",{"_index":517,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["this.authservice.logout(req.user['sub",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(username",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(authdto",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createuserdto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":516,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["this.configservice.get('jwt_access_secret",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.country",{"_index":515,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["this.firstname",{"_index":514,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["this.gettokens",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokens(user._id",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prefferedroles",{"_index":518,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{}}}],["this.reflector.get('roles",{"_index":360,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.teammodel",{"_index":481,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.teammodel(createteamdto).save",{"_index":478,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.teammodel.find({}).exec",{"_index":479,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.teammodel.findbyid(id).populate('owner').exec",{"_index":480,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.teammodel.findbyidandremove(id).exec",{"_index":484,"title":{},"body":{"injectables/TeamsService.html":{}}}],["this.teamsservice.create(createteamdto",{"_index":451,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamsservice.findall",{"_index":452,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamsservice.findone(id",{"_index":454,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamsservice.remove(id",{"_index":458,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.teamsservice.update(id",{"_index":456,"title":{},"body":{"controllers/TeamsController.html":{}}}],["this.updaterefreshtoken(newuser._id",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updaterefreshtoken(user._id",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel",{"_index":602,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel(createuserdto",{"_index":599,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":601,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidanddelete(id).exec",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyusername",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyusername(authdto.username",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyusername(username",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(userid",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findloggeduser(req.user['username",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateself(req.user['username",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["timestamps",{"_index":401,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["todo",{"_index":392,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["token",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["tokens",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens.refreshtoken",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["top",{"_index":506,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["touch",{"_index":705,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{},"dependencies.html":{}}}],["true",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":711,"title":{},"body":{"index.html":{}}}],["type",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":724,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":488,"title":{},"body":{"classes/UpdateTeamDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":669,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":371,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"classes/User.html":{}}}],["unique",{"_index":383,"title":{},"body":{"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{}}}],["unit",{"_index":684,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":723,"title":{},"body":{"properties.html":{}}}],["update",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["update(@param('id",{"_index":455,"title":{},"body":{"controllers/TeamsController.html":{}}}],["update(@req",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":433,"title":{},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"injectables/UsersService.html":{}}}],["update(req",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{}}}],["updaterefreshtoken",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["updaterefreshtoken(userid",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateself",{"_index":578,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateself(username",{"_index":592,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateselfdto",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateteamdto",{"_index":434,"title":{"classes/UpdateTeamDto.html":{}},"body":{"controllers/TeamsController.html":{},"injectables/TeamsService.html":{},"classes/UpdateTeamDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":490,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updating",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["used",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["useguards",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["useguards(accesstokenguard",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TeamsController.html":{},"controllers/UsersController.html":{}}}],["useguards(accesstokenguard)@get('logout",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(accesstokenguard)@get('me",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(accesstokenguard)@get('test",{"_index":431,"title":{},"body":{"controllers/TeamsController.html":{}}}],["useguards(accesstokenguard)@patch('me",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(refreshtokenguard",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(refreshtokenguard)@post('refresh",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":99,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:18",{"_index":334,"title":{},"body":{"classes/DetailsDto.html":{}}}],["user.dto.ts:22",{"_index":333,"title":{},"body":{"classes/DetailsDto.html":{}}}],["user.dto.ts:26",{"_index":332,"title":{},"body":{"classes/DetailsDto.html":{}}}],["user.dto.ts:30",{"_index":331,"title":{},"body":{"classes/DetailsDto.html":{}}}],["user.dto.ts:34",{"_index":336,"title":{},"body":{"classes/DetailsDto.html":{}}}],["user.dto.ts:41",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:55",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:59",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:63",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:70",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":574,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.refreshtoken",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":318,"title":{"classes/UserDetails.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"coverage.html":{}}}],["userdocument",{"_index":503,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userexists",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":581,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"injectables/UsersService.html":{}}}],["userroles",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"classes/User.html":{},"classes/UserDetails.html":{},"miscellaneous/enumerations.html":{}}}],["userroles.player",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":573,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/schemas/user.schema",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"classes/Team.html":{},"classes/TeamHistory.html":{},"interfaces/TeamHistoryInterface.html":{}}}],["users/users.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":519,"title":{},"body":{"classes/User.html":{},"classes/UserDetails.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":532,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":177,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdateselfdto",{"_index":526,"title":{"injectables/UserUpdateSelfDto.html":{}},"body":{"injectables/UserUpdateSelfDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["validate",{"_index":22,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(payload",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(req",{"_index":340,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validatenested",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{}}}],["validator",{"_index":157,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/DetailsDto.html":{},"injectables/UserUpdateSelfDto.html":{},"dependencies.html":{}}}],["value",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":729,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":721,"title":{},"body":{"properties.html":{}}}],["void",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["watch",{"_index":679,"title":{},"body":{"index.html":{}}}],["website",{"_index":709,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":698,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/accessToken.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/accessToken.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/accessToken.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/accessToken.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\ntype JwtPayload = {\n  sub: string;\n  email: string;\n};\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private config: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.get('JWT_ACCESS_SECRET'),\n    });\n  }\n\n  validate(payload: JwtPayload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            TeamsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { TeamsModule } from './teams/teams.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RolesGuard } from './common/guards/roles.guard';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      'mongodb://mongoadmin:mongoadmin@localhost:27017/praca',\n    ),\n    UsersModule,\n    AuthModule,\n    TeamsModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                refreshTokens\n                            \n                            \n                                signin\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Get('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Extracting user object from request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \nrefreshTokens(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Post('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signin\n                        \n                    \n                \n            \n            \n                \nsignin(authDto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Req, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { AuthDto } from './dto/auth.dto';\nimport { Request } from 'express';\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard';\nimport { RefreshTokenGuard } from '../common/guards/refreshToken.guard';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('signup')\n  signup(@Body() createUserDto: CreateUserDto) {\n    return this.authService.signUp(createUserDto);\n  }\n\n  @Post('signin')\n  signin(@Body() authDto: AuthDto) {\n    return this.authService.signIn(authDto);\n  }\n\n  /**\n   *\n   * @param req Extracting user object from request\n   */\n  @UseGuards(AccessTokenGuard)\n  @Get('logout')\n  logout(@Req() req: Request) {\n    this.authService.logout(req.user['sub']);\n  }\n\n  @UseGuards(RefreshTokenGuard)\n  @Post('refresh')\n  refreshTokens(@Req() req: Request) {\n    const username = req.user['username'];\n    const refreshToken = req.user['refreshToken'];\n    return this.authService.refreshTokens(username, refreshToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AccessTokenStrategy } from './strategies/accessToken.strategy';\nimport { RefreshTokenStrategy } from './strategies/refreshToken.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, AccessTokenStrategy, RefreshTokenStrategy],\n  imports: [JwtModule.register({}), ConfigModule.forRoot(), UsersModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTokens\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens(userId: string, username: string, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:109\n                \n            \n\n\n            \n                \n                    Generates both tokens for user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        accessToken\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n                    Logout method\nSets user refreshToken to NULL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(username: string, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:147\n                \n            \n\n\n            \n                \n                    Updates user's access Token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        accessToken\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(authDto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Sign in method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        refreshToken\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n                    Creates new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        refreshToken\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n                    Function used to hash a refresh token and update it in user's document\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport * as argon2 from 'argon2';\nimport { AuthDto } from './dto/auth.dto';\nimport { UserRoles } from '../users/schemas/user.schema';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  /**\n   * Creates new user\n   * @param createUserDto\n   * @returns {string} refreshToken\n   * @returns {string} accessToken\n   */\n  async signUp(createUserDto: CreateUserDto) {\n    //Checking if user exists\n    const userExists = await this.userService.findByUsername(\n      createUserDto.username,\n    );\n    if (userExists) {\n      throw new BadRequestException('User already exists');\n    }\n\n    //hashing password with argon\n    const hash = await argon2.hash(createUserDto.password);\n    console.log(createUserDto);\n    const newUser = await this.userService.create({\n      ...createUserDto,\n      password: hash,\n      role: UserRoles.PLAYER,\n      currentTeam: null,\n    });\n\n    //generating tokens for client\n    const tokens = await this.getTokens(\n      newUser._id,\n      newUser.username,\n      newUser.role,\n    );\n    await this.updateRefreshToken(newUser._id, tokens.refreshToken);\n    return tokens;\n  }\n\n  /**\n   * Sign in method\n   * @param authDto\n   * @return{string} refreshToken\n   * @return{string} accessToken\n   */\n  async signIn(authDto: AuthDto) {\n    //Checking if user exists\n    const user = await this.userService.findByUsername(authDto.username);\n    if (!user) throw new BadRequestException('User does not exists');\n\n    //Checking if the password matches\n    const passwordMatches = await argon2.verify(\n      user.password,\n      authDto.password,\n    );\n    if (!passwordMatches)\n      throw new BadRequestException('Username or password is incorrect');\n\n    //generating tokens for client\n    const tokens = await this.getTokens(user._id, user.username, user.role);\n\n    //updating the user's refresh token\n    await this.updateRefreshToken(user._id, tokens.refreshToken);\n    return tokens;\n  }\n\n  /**\n   * Logout method\n   * Sets user refreshToken to NULL\n   * @param userId\n   */\n  async logout(userId: string) {\n    //Sets refresh token to NULL\n    return await this.userService.update(userId, { refreshToken: null });\n  }\n\n  /**\n   * Function used to hash a refresh token and update it in user's document\n   * @param userId\n   * @param refreshToken\n   */\n  async updateRefreshToken(userId: string, refreshToken: string) {\n    const hashedRefreshedToken = await argon2.hash(refreshToken);\n    await this.userService.update(userId, {\n      refreshToken: hashedRefreshedToken,\n    });\n  }\n\n  /**\n   * Generates both tokens for user\n   * @param userId\n   * @param username\n   * @return{string} accessToken\n   * @return{string} refreshToken\n   */\n  async getTokens(userId: string, username: string, role: string) {\n    const [accessToken, refreshToken] = await Promise.all([\n      this.jwtService.signAsync(\n        {\n          sub: userId,\n          username,\n          role,\n        },\n        {\n          secret: this.configService.get('JWT_ACCESS_SECRET'),\n          expiresIn: '30min',\n        },\n      ),\n      this.jwtService.signAsync(\n        {\n          sub: userId,\n          username,\n          role,\n        },\n        {\n          secret: this.configService.get('JWT_REFRESH_SECRET'),\n          expiresIn: '30d',\n        },\n      ),\n    ]);\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n\n  /**\n   * Updates user's access Token\n   * @param username\n   * @param refreshToken\n   * @return{string} accessToken\n   * @return{string} refresToken\n   */\n  async refreshTokens(username: string, refreshToken: string) {\n    const user = await this.userService.findByUsername(username);\n    if (!user || !user.refreshToken)\n      throw new BadRequestException('Access Denied');\n\n    //Checks if refreshToken from request matches one from document\n    const refreshTokenMatches = await argon2.verify(\n      user.refreshToken,\n      refreshToken,\n    );\n    if (!refreshTokenMatches) throw new BadRequestException('Access Denied');\n\n    const tokens = await this.getTokens(user._id, user.username, user.role);\n    await this.updateRefreshToken(user._id, tokens.refreshToken);\n    return tokens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeamDto.html":{"url":"classes/CreateTeamDto.html","title":"class - CreateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/dto/create-team.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/dto/create-team.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/dto/create-team.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/dto/create-team.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@Length(4, 4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/dto/create-team.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTeamDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  icon: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @Length(4, 4)\n  tag: string;\n\n  @IsString()\n  @IsNotEmpty()\n  owner: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTeam\n                            \n                            \n                                    Optional\n                                details\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                refreshToken\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: DetailsDto})@IsOptional()@IsDefined()@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDefined,\n  IsEmail,\n  IsEmpty,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PlayerRoles, UserDetails, UserRoles } from '../schemas/user.schema';\nimport { Type } from 'class-transformer';\nimport { ApiHideProperty, ApiProduces, ApiProperty } from '@nestjs/swagger';\n\nexport class DetailsDto {\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @IsOptional()\n  @IsString()\n  country: string;\n\n  @IsOptional()\n  @IsString()\n  avatar: string;\n\n  @IsOptional()\n  @IsString()\n  about: string;\n\n  @IsOptional()\n  @IsEnum(PlayerRoles, { each: true })\n  prefferedRoles: PlayerRoles[];\n}\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiHideProperty()\n  @IsEmpty()\n  refreshToken: string;\n\n  @ApiProperty()\n  @IsEmpty()\n  currentTeam: string;\n\n  @ApiHideProperty()\n  @IsEmpty()\n  role: UserRoles;\n\n  @ApiProperty({ type: DetailsDto })\n  @IsOptional()\n  @IsDefined()\n  @Type(() => DetailsDto)\n  @ValidateNested()\n  details?: DetailsDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailsDto.html":{"url":"classes/DetailsDto.html","title":"class - DetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                about\n                            \n                            \n                                avatar\n                            \n                            \n                                country\n                            \n                            \n                                firstname\n                            \n                            \n                                prefferedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefferedRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlayerRoles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(PlayerRoles, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDefined,\n  IsEmail,\n  IsEmpty,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { PlayerRoles, UserDetails, UserRoles } from '../schemas/user.schema';\nimport { Type } from 'class-transformer';\nimport { ApiHideProperty, ApiProduces, ApiProperty } from '@nestjs/swagger';\n\nexport class DetailsDto {\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @IsOptional()\n  @IsString()\n  country: string;\n\n  @IsOptional()\n  @IsString()\n  avatar: string;\n\n  @IsOptional()\n  @IsString()\n  about: string;\n\n  @IsOptional()\n  @IsEnum(PlayerRoles, { each: true })\n  prefferedRoles: PlayerRoles[];\n}\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiHideProperty()\n  @IsEmpty()\n  refreshToken: string;\n\n  @ApiProperty()\n  @IsEmpty()\n  currentTeam: string;\n\n  @ApiHideProperty()\n  @IsEmpty()\n  role: UserRoles;\n\n  @ApiProperty({ type: DetailsDto })\n  @IsOptional()\n  @IsDefined()\n  @Type(() => DetailsDto)\n  @ValidateNested()\n  details?: DetailsDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/refreshToken.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refreshToken.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refreshToken.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(req: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/refreshToken.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(private config: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromBodyField('refreshToken'),\n      secretOrKey: config.get('JWT_REFRESH_SECRET'),\n      passReqToCallback: true,\n    });\n  }\n\n  validate(req: Request, payload: any) {\n    const refreshToken = req.body.refreshToken;\n    return { ...payload, refreshToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    return roles.includes(user.role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/schema/team.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeTournament\n                            \n                            \n                                history\n                            \n                            \n                                icon\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeTournament\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamHistoryInterface[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { User } from '../../users/schemas/user.schema';\n\nexport type TeamDocument = Team & Document;\n\n@Schema()\nexport class TeamHistory extends Document {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId /* TODO: ref: History */,\n  })\n  matchId: string;\n  @Prop({ required: true })\n  oponnent: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'Team' })\n  oponnentId: string;\n\n  @Prop({ required: true })\n  result: string;\n\n  @Prop({ required: true })\n  date: Date;\n}\n\ninterface TeamHistoryInterface {\n  matchId: string;\n  oponnent: string;\n  oponnentId: string;\n  result: string;\n  date: Date;\n}\n\nexport const TeamHistorySchema = SchemaFactory.createForClass(TeamHistory);\n\n@Schema({ timestamps: true })\nexport class Team {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  icon: string;\n\n  @Prop({ required: true, unique: true })\n  tag: string;\n\n  @Prop({ type: mongoose.Schema.Types.String, ref: 'User' })\n  owner: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.String, ref: 'User' }] })\n  members: User[];\n\n  @Prop({ default: null })\n  activeTournament: string;\n\n  @Prop({ type: [{ type: TeamHistorySchema }] })\n  history: TeamHistoryInterface[];\n}\n\nexport const TeamSchema = SchemaFactory.createForClass(Team);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamHistory.html":{"url":"classes/TeamHistory.html","title":"class - TeamHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/schema/team.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                matchId\n                            \n                            \n                                oponnent\n                            \n                            \n                                oponnentId\n                            \n                            \n                                result\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oponnent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oponnentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'Team'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teams/schema/team.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { User } from '../../users/schemas/user.schema';\n\nexport type TeamDocument = Team & Document;\n\n@Schema()\nexport class TeamHistory extends Document {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId /* TODO: ref: History */,\n  })\n  matchId: string;\n  @Prop({ required: true })\n  oponnent: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'Team' })\n  oponnentId: string;\n\n  @Prop({ required: true })\n  result: string;\n\n  @Prop({ required: true })\n  date: Date;\n}\n\ninterface TeamHistoryInterface {\n  matchId: string;\n  oponnent: string;\n  oponnentId: string;\n  result: string;\n  date: Date;\n}\n\nexport const TeamHistorySchema = SchemaFactory.createForClass(TeamHistory);\n\n@Schema({ timestamps: true })\nexport class Team {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  icon: string;\n\n  @Prop({ required: true, unique: true })\n  tag: string;\n\n  @Prop({ type: mongoose.Schema.Types.String, ref: 'User' })\n  owner: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.String, ref: 'User' }] })\n  members: User[];\n\n  @Prop({ default: null })\n  activeTournament: string;\n\n  @Prop({ type: [{ type: TeamHistorySchema }] })\n  history: TeamHistoryInterface[];\n}\n\nexport const TeamSchema = SchemaFactory.createForClass(Team);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamHistoryInterface.html":{"url":"interfaces/TeamHistoryInterface.html","title":"interface - TeamHistoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamHistoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/schema/team.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            matchId\n                                        \n                                \n                                \n                                        \n                                            oponnent\n                                        \n                                \n                                \n                                        \n                                            oponnentId\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oponnent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oponnent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oponnentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oponnentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { User } from '../../users/schemas/user.schema';\n\nexport type TeamDocument = Team & Document;\n\n@Schema()\nexport class TeamHistory extends Document {\n  @Prop({\n    required: true,\n    type: mongoose.Schema.Types.ObjectId /* TODO: ref: History */,\n  })\n  matchId: string;\n  @Prop({ required: true })\n  oponnent: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: 'Team' })\n  oponnentId: string;\n\n  @Prop({ required: true })\n  result: string;\n\n  @Prop({ required: true })\n  date: Date;\n}\n\ninterface TeamHistoryInterface {\n  matchId: string;\n  oponnent: string;\n  oponnentId: string;\n  result: string;\n  date: Date;\n}\n\nexport const TeamHistorySchema = SchemaFactory.createForClass(TeamHistory);\n\n@Schema({ timestamps: true })\nexport class Team {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  icon: string;\n\n  @Prop({ required: true, unique: true })\n  tag: string;\n\n  @Prop({ type: mongoose.Schema.Types.String, ref: 'User' })\n  owner: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.String, ref: 'User' }] })\n  members: User[];\n\n  @Prop({ default: null })\n  activeTournament: string;\n\n  @Prop({ type: [{ type: TeamHistorySchema }] })\n  history: TeamHistoryInterface[];\n}\n\nexport const TeamSchema = SchemaFactory.createForClass(Team);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamsController.html":{"url":"controllers/TeamsController.html","title":"controller - TeamsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/teams.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teams\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                test\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTeamDto: CreateTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeamDto\n                                    \n                                                CreateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Get('test')\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTeamDto: UpdateTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/teams/teams.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeamDto\n                                    \n                                                UpdateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { TeamsService } from './teams.service';\nimport { CreateTeamDto } from './dto/create-team.dto';\nimport { UpdateTeamDto } from './dto/update-team.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard';\nimport { Roles } from '../common/decorators/roles.decorator';\nimport { RolesGuard } from '../common/guards/roles.guard';\n\n@ApiTags('teams')\n@Controller('teams')\nexport class TeamsController {\n  constructor(private readonly teamsService: TeamsService) {}\n\n  @UseGuards(AccessTokenGuard)\n  @Get('test')\n  test(@Req() req: Request) {\n    return req.user;\n  }\n\n  @Post()\n  create(@Body() createTeamDto: CreateTeamDto) {\n    return this.teamsService.create(createTeamDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.teamsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.teamsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTeamDto: UpdateTeamDto) {\n    return this.teamsService.update(id, updateTeamDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.teamsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsModule.html":{"url":"modules/TeamsModule.html","title":"module - TeamsModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\n\nTeamsService\n\nTeamsService\n\n\n\nTeamsModule\n\nTeamsModule\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeamsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeamsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeamsService } from './teams.service';\nimport { TeamsController } from './teams.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Team, TeamSchema } from './schema/team.schema';\n\n@Module({\n  controllers: [TeamsController],\n  providers: [TeamsService],\n  imports: [\n    MongooseModule.forFeature([{ name: Team.name, schema: TeamSchema }]),\n  ],\n})\nexport class TeamsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsService.html":{"url":"injectables/TeamsService.html","title":"injectable - TeamsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/teams.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/teams/teams.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTeamDto: CreateTeamDto)\n                \n            \n\n\n            \n                \n                    Defined in src/teams/teams.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeamDto\n                                    \n                                                CreateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/teams/teams.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/teams/teams.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/teams/teams.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTeamDto: UpdateTeamDto)\n                \n            \n\n\n            \n                \n                    Defined in src/teams/teams.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeamDto\n                                    \n                                                UpdateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTeamDto } from './dto/create-team.dto';\nimport { UpdateTeamDto } from './dto/update-team.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Team, TeamDocument } from './schema/team.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class TeamsService {\n  constructor(@InjectModel(Team.name) private teamModel: Model) {}\n  create(createTeamDto: CreateTeamDto) {\n    return new this.teamModel(createTeamDto).save();\n  }\n\n  findAll() {\n    return this.teamModel.find({}).exec();\n  }\n\n  findOne(id: string) {\n    return this.teamModel.findById(id).populate('owner').exec();\n  }\n\n  update(id: string, updateTeamDto: UpdateTeamDto) {\n    return this.teamModel\n      .findByIdAndUpdate(id, updateTeamDto, { new: true })\n      .exec();\n  }\n\n  remove(id: string) {\n    return this.teamModel.findByIdAndRemove(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeamDto.html":{"url":"classes/UpdateTeamDto.html","title":"class - UpdateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teams/dto/update-team.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeamDto } from './create-team.dto';\n\nexport class UpdateTeamDto extends PartialType(CreateTeamDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTeam\n                            \n                            \n                                details\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                refreshToken\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Team', defualt: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetails\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserDetails, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { Team } from '../../teams/schema/team.schema';\n\nexport type UserDocument = User & Document;\n\nexport enum PlayerRoles {\n  MID = 'MID',\n  TOP = 'TOP',\n  JUNGLE = 'JUNGLE',\n  BOT = 'BOT',\n  SUPPORT = 'SUPPORT',\n}\n\nexport enum UserRoles {\n  PLAYER = 'PLAYER',\n  ORGANIZER = 'ORGANIZER',\n  ADMIN = 'ADMIN',\n}\n\nexport class UserDetails {\n  firstname: string;\n  country: string;\n  avatar: string;\n  about: string;\n  prefferedRoles: PlayerRoles[];\n\n  public constructor() {\n    this.firstname = '';\n    this.country = '';\n    this.avatar = null;\n    this.about = '';\n    this.prefferedRoles = [];\n  }\n}\n\n/**\n * @class User\n */\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ required: true })\n  role: UserRoles;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Team', defualt: null })\n  currentTeam: Team;\n\n  @Prop({ type: UserDetails, default: new UserDetails() })\n  details: UserDetails;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetails.html":{"url":"classes/UserDetails.html","title":"class - UserDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                about\n                            \n                            \n                                avatar\n                            \n                            \n                                country\n                            \n                            \n                                firstname\n                            \n                            \n                                prefferedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/schemas/user.schema.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefferedRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlayerRoles[]\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { Team } from '../../teams/schema/team.schema';\n\nexport type UserDocument = User & Document;\n\nexport enum PlayerRoles {\n  MID = 'MID',\n  TOP = 'TOP',\n  JUNGLE = 'JUNGLE',\n  BOT = 'BOT',\n  SUPPORT = 'SUPPORT',\n}\n\nexport enum UserRoles {\n  PLAYER = 'PLAYER',\n  ORGANIZER = 'ORGANIZER',\n  ADMIN = 'ADMIN',\n}\n\nexport class UserDetails {\n  firstname: string;\n  country: string;\n  avatar: string;\n  about: string;\n  prefferedRoles: PlayerRoles[];\n\n  public constructor() {\n    this.firstname = '';\n    this.country = '';\n    this.avatar = null;\n    this.about = '';\n    this.prefferedRoles = [];\n  }\n}\n\n/**\n * @class User\n */\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ required: true })\n  role: UserRoles;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Team', defualt: null })\n  currentTeam: Team;\n\n  @Prop({ type: UserDetails, default: new UserDetails() })\n  details: UserDetails;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUpdateSelfDto.html":{"url":"injectables/UserUpdateSelfDto.html","title":"injectable - UserUpdateSelfDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserUpdateSelfDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-update-self.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DetailsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDefined()@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-update-self.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-update-self.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  IsDefined,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { DetailsDto } from './create-user.dto';\n\n@Injectable()\nexport class UserUpdateSelfDto {\n  @IsOptional()\n  @IsString()\n  password: string;\n\n  @IsOptional()\n  @IsDefined()\n  @Type(() => DetailsDto)\n  @ValidateNested()\n  details: DetailsDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findLogged\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n                    Creates user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findLogged\n                        \n                    \n                \n            \n            \n                \n                    \n                    findLogged(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Get('me')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n                    Returns logged user's data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfrom AccessTokenGuard\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        user data of the token owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:54\n                \n            \n\n\n            \n                \n                    Returns specified user's data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nID of user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nuser data\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles('ADMIN')@UseGuards(AccessTokenGuard, RolesGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(req: Request, updateSelfDto: UserUpdateSelfDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Patch('me')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSelfDto\n                                    \n                                                UserUpdateSelfDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Req,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserUpdateSelfDto } from './dto/user-update-self.dto';\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard';\nimport { Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { Roles } from '../common/decorators/roles.decorator';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Creates user\n   * @param {CreateUserDto} createUserDto\n   * @returns {UserDocument} user\n   *\n   */\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  /**\n   * Returns logged user's data\n   * @returns {UserDocument} user data of the token owner\n   * @param req - from AccessTokenGuard\n   */\n  @UseGuards(AccessTokenGuard)\n  @Get('me')\n  async findLogged(@Req() req: Request) {\n    return await this.usersService.findLoggedUser(req.user['username']);\n  }\n\n  /**\n   * Returns specified user's data\n   * @returns {mongoose.document} - user data\n   * @param id {string} - ID of user\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @Patch('me')\n  update(@Req() req: Request, @Body() updateSelfDto: UserUpdateSelfDto) {\n    return this.usersService.updateSelf(req.user['username'], updateSelfDto);\n  }\n\n  @Roles('ADMIN')\n  @UseGuards(AccessTokenGuard, RolesGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findLoggedUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateSelf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findLoggedUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findLoggedUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelf(username: string, userUpdateSelfDto: UserUpdateSelfDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:50\n                \n            \n\n\n            \n                \n                    Update function for changes to account made by user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userUpdateSelfDto\n                                    \n                                                UserUpdateSelfDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { Model } from 'mongoose';\nimport { UserUpdateSelfDto } from './dto/user-update-self.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n  async create(createUserDto: CreateUserDto) {\n    const createdUser = await new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findLoggedUser(username: string): Promise {\n    return this.userModel\n      .findOne({ username })\n      .select({ refreshToken: 0, password: 0, _v: 0 })\n      .exec();\n  }\n\n  async findOne(id: string): Promise {\n    return this.userModel.findById(id);\n  }\n\n  async findByUsername(username: string): Promise {\n    return this.userModel.findOne({ username }).exec();\n  }\n\n  async update(\n    id: string,\n    updateUserDto: UpdateUserDto,\n  ): Promise {\n    return this.userModel\n      .findByIdAndUpdate(id, updateUserDto, { new: true })\n      .exec();\n  }\n\n  /**\n   * Update function for changes to account made by user\n   * @param username\n   * @param userUpdateSelfDto\n   */\n  async updateSelf(\n    username: string,\n    userUpdateSelfDto: UserUpdateSelfDto,\n  ): Promise {\n    return this.userModel\n      .findOneAndUpdate({ username }, userUpdateSelfDto, { new: true })\n      .select({ refreshToken: 0, password: 0, _v: 0 })\n      .exec();\n  }\n\n  async remove(id: string) {\n    return this.userModel.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/accessToken.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/refreshToken.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/accessToken.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/refreshToken.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teams/dto/create-team.dto.ts\n            \n            class\n            CreateTeamDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/teams/dto/update-team.dto.ts\n            \n            class\n            UpdateTeamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teams/schema/team.schema.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/teams/schema/team.schema.ts\n            \n            class\n            TeamHistory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teams/schema/team.schema.ts\n            \n            interface\n            TeamHistoryInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teams/schema/team.schema.ts\n            \n            variable\n            TeamHistorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teams/schema/team.schema.ts\n            \n            variable\n            TeamSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teams/teams.controller.ts\n            \n            controller\n            TeamsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/teams/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            DetailsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/user-update-self.dto.ts\n            \n            injectable\n            UserUpdateSelfDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            UserDetails\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                10 %\n                (1/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.3\n        \n            argon2 : ^0.30.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mongoose : ^6.6.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PlayerRoles   (src/.../user.schema.ts)\n                        \n                        \n                            UserRoles   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/schemas/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        PlayerRoles\n                    \n                \n                        \n                            \n                                 MID\n                            \n                        \n                        \n                            \n                                Value : MID\n                            \n                        \n                        \n                            \n                                 TOP\n                            \n                        \n                        \n                            \n                                Value : TOP\n                            \n                        \n                        \n                            \n                                 JUNGLE\n                            \n                        \n                        \n                            \n                                Value : JUNGLE\n                            \n                        \n                        \n                            \n                                 BOT\n                            \n                        \n                        \n                            \n                                Value : BOT\n                            \n                        \n                        \n                            \n                                 SUPPORT\n                            \n                        \n                        \n                            \n                                Value : SUPPORT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRoles\n                    \n                \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : PLAYER\n                            \n                        \n                        \n                            \n                                 ORGANIZER\n                            \n                        \n                        \n                            \n                                Value : ORGANIZER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\nTeamsService\n\nTeamsService\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtPayload   (src/.../accessToken.strategy.ts)\n                        \n                        \n                            TeamDocument   (src/.../team.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/strategies/accessToken.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/teams/schema/team.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TeamDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            TeamHistorySchema   (src/.../team.schema.ts)\n                        \n                        \n                            TeamSchema   (src/.../team.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/teams/schema/team.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TeamHistorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TeamHistory)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TeamSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Team)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
